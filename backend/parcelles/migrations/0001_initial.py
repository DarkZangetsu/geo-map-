# Generated by Django 5.2 on 2025-07-26 14:38

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=150)),
                ('last_name', models.CharField(blank=True, max_length=150)),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('membre', 'Membre')], default='membre', max_length=10)),
                ('logo', models.ImageField(blank=True, help_text='Logo du membre', null=True, upload_to='logos/')),
                ('abreviation', models.CharField(blank=True, help_text='Abréviation du membre', max_length=20)),
                ('nom_institution', models.CharField(blank=True, help_text="Nom de l'institution", max_length=200)),
                ('nom_projet', models.CharField(blank=True, help_text='Nom du projet', max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Parcelle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('nom_personne_referente', models.CharField(blank=True, help_text='Nom de la personne référente', max_length=100)),
                ('poste', models.CharField(blank=True, help_text='Poste de la personne référente', max_length=100)),
                ('telephone', models.CharField(blank=True, help_text='Téléphone de la personne référente', max_length=20)),
                ('email', models.EmailField(blank=True, help_text='Email de la personne référente', max_length=254)),
                ('superficie', models.DecimalField(blank=True, decimal_places=2, help_text='Superficie en hectares', max_digits=10, null=True)),
                ('pratique', models.CharField(blank=True, choices=[('structure_brise_vent', 'Structure Brise-vent'), ('structure_pare_feu', 'Structure Pare feu'), ('structures_antierosives', 'Structures antiérosives'), ('structure_cultures_couloir', 'Structure Cultures en Couloir/allée'), ('pratiques_taillage_coupe', 'Pratiques de taillage, coupe et application engrais verts'), ('pratiques_couverture_sol', 'Pratiques couverture du sol'), ('pratiques_conservation_eau', "Pratiques/structures conservation d'eau"), ('systeme_multi_etage', 'Système multi-étage diversifié'), ('arbres_autochtones', 'Arbres Autochtones'), ('production_epices', 'Production épices'), ('production_bois_energie', 'Production Bois énergie'), ('production_fruit', 'Production fruit'), ('integration_cultures_vivrieres', 'Intégration cultures vivrières'), ('integration_elevage', "Intégration d'élevage")], help_text='Pratique agricole principale', max_length=50)),
                ('nom_projet', models.CharField(blank=True, help_text='Nom du projet', max_length=200)),
                ('geojson', models.JSONField(help_text='Données GeoJSON converties depuis les fichiers uploadés')),
                ('description', models.TextField(blank=True, help_text='Description de la parcelle', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parcelles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ParcelleImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Image de la parcelle', upload_to='parcelles/')),
                ('titre', models.CharField(blank=True, help_text="Titre de l'image", max_length=200, null=True)),
                ('description', models.TextField(blank=True, help_text="Description de l'image", null=True)),
                ('ordre', models.IntegerField(default=0, help_text="Ordre d'affichage")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('parcelle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='parcelles.parcelle')),
            ],
            options={
                'ordering': ['ordre', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='Pepiniere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('adresse', models.CharField(max_length=255)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('description', models.TextField(blank=True, null=True)),
                ('nom_gestionnaire', models.CharField(blank=True, help_text='Nom du gestionnaire', max_length=100)),
                ('poste_gestionnaire', models.CharField(blank=True, help_text='Poste du gestionnaire', max_length=100)),
                ('telephone_gestionnaire', models.CharField(blank=True, help_text='Téléphone du gestionnaire', max_length=20)),
                ('email_gestionnaire', models.EmailField(blank=True, help_text='Email du gestionnaire', max_length=254)),
                ('especes_produites', models.TextField(blank=True, help_text='Espèces produites')),
                ('nom_projet', models.CharField(blank=True, help_text='Nom du projet', max_length=200)),
                ('quantite_production_generale', models.TextField(blank=True, help_text='Quantité de production générale')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pepinieres', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PepiniereImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Photo de la pépinière', upload_to='pepinieres/')),
                ('titre', models.CharField(blank=True, help_text="Titre de l'image", max_length=200, null=True)),
                ('description', models.TextField(blank=True, help_text="Description de l'image", null=True)),
                ('ordre', models.IntegerField(default=0, help_text="Ordre d'affichage")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('pepiniere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='parcelles.pepiniere')),
            ],
            options={
                'ordering': ['ordre', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='Siege',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('categorie', models.CharField(choices=[('social', 'Siège social'), ('regional', 'Siège régional'), ('technique', 'Siège technique'), ('provisoire', 'Siège provisoire')], default='social', help_text='Catégorie du siège', max_length=20)),
                ('nom_point_contact', models.CharField(blank=True, help_text='Nom du point de contact', max_length=100)),
                ('poste', models.CharField(blank=True, help_text='Poste du point de contact', max_length=100)),
                ('telephone', models.CharField(blank=True, help_text='Téléphone du point de contact', max_length=20)),
                ('email', models.EmailField(blank=True, help_text='Email du point de contact', max_length=254)),
                ('horaire_matin', models.CharField(blank=True, help_text='Horaires du matin', max_length=100)),
                ('horaire_apres_midi', models.CharField(blank=True, help_text="Horaires de l'après-midi", max_length=100)),
                ('adresse', models.CharField(max_length=255)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sieges', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SiegeImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Photo du bâtiment', upload_to='sieges/')),
                ('titre', models.CharField(blank=True, help_text="Titre de l'image", max_length=200, null=True)),
                ('description', models.TextField(blank=True, help_text="Description de l'image", null=True)),
                ('ordre', models.IntegerField(default=0, help_text="Ordre d'affichage")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('siege', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos_batiment', to='parcelles.siege')),
            ],
            options={
                'ordering': ['ordre', 'created_at'],
            },
        ),
    ]
